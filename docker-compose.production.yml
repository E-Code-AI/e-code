# E-Code Platform Production Docker Compose
# Simplified configuration with proper port mapping

version: '3.8'

services:
  app:
    build: .
    ports:
      - "80:5000"    # HTTP: External port 80 → Internal port 5000
      - "443:5000"   # HTTPS: External port 443 → Internal port 5000 (with SSL termination)
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DATABASE_URL=${DATABASE_URL}
      - SESSION_SECRET=${SESSION_SECRET}
      - REDIS_URL=redis://redis:6379
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./attached_assets:/app/attached_assets
    networks:
      - ecode-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/monitoring/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${PGDATABASE:-ecode}
      - POSTGRES_USER=${PGUSER:-ecode_user}
      - POSTGRES_PASSWORD=${PGPASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - ecode-network
    # Don't expose postgres port externally in production

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-changeme}
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - ecode-network
    # Don't expose redis port externally in production

volumes:
  postgres-data:
  redis-data:

networks:
  ecode-network:
    driver: bridge