# Go Runtime Service Dockerfile
FROM golang:1.21-alpine AS builder

WORKDIR /app

# Install dependencies
RUN apk add --no-cache git gcc musl-dev

# Copy go mod files
COPY server/polyglot/go-runtime/go.mod server/polyglot/go-runtime/go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY server/polyglot/go-runtime/ ./

# Build the application
RUN CGO_ENABLED=1 GOOS=linux go build -a -installsuffix cgo -o go-runtime .

# Production stage
FROM alpine:latest

RUN apk --no-cache add ca-certificates docker-cli

WORKDIR /root/

# Copy the binary from builder
COPY --from=builder /app/go-runtime .

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# Run the binary
CMD ["./go-runtime"]